#!/usr/bin/env python
# coding: utf-8

# In[54]:


import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt
import os
for dirname, _, filenames in os.walk('F:\shubzz\Advertising.csv'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

df=pd.read_csv('F:\shubzz\Advertising.csv')
df


# In[55]:


df=df.drop(columns=['Unnamed: 0'])
df.head()


# In[56]:


df.shape


# In[57]:


x=df.iloc[:,0:-1]


# In[58]:


x


# In[59]:


y=df.iloc[:,-1]


# In[60]:


y


# In[61]:



from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=43)


# In[62]:


x_train


# In[63]:



x_test


# In[64]:


y_train


# In[65]:


y_test


# In[66]:


x_train=x_train.astype(int)
y_train=y_train.astype(int)
x_test=x_test.astype(int)
y_test=y_test.astype(int)


# In[67]:


from sklearn.preprocessing import StandardScaler
Sc=StandardScaler()
x_train_scaled=Sc.fit_transform(x_train)
x_test_scaled=Sc.fit_transform(x_test)


# In[68]:


#linear regression
from sklearn.linear_model import LinearRegression
lr=LinearRegression()
lr.fit(x_train_scaled,y_train)


# In[69]:


y_pred=lr.predict(x_test_scaled)
from sklearn.metrics import r2_score
r2_score(y_test,y_pred)


# In[70]:


plt.scatter(y_test,y_pred,c='g')


# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:





# In[ ]:




